//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace SolAR.Api.Reloc {

    using XPCF.Api;
    using SolAR.Core;
    using SolAR.Datastructure;

public class IKeyframeRetriever : IComponentIntrospect {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal IKeyframeRetriever(global::System.IntPtr cPtr, bool cMemoryOwn) : base(solar_api_relocPINVOKE.IKeyframeRetriever_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(IKeyframeRetriever obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          solar_api_relocPINVOKE.delete_IKeyframeRetriever(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public virtual FrameworkReturnCode addKeyframe(Keyframe keyframe) {
    FrameworkReturnCode ret = (FrameworkReturnCode)solar_api_relocPINVOKE.IKeyframeRetriever_addKeyframe(swigCPtr, Keyframe.getCPtr(keyframe));
    if (solar_api_relocPINVOKE.SWIGPendingException.Pending) throw solar_api_relocPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual FrameworkReturnCode retrieve(Frame frame, KeyframeList keyframes) {
    FrameworkReturnCode ret = (FrameworkReturnCode)solar_api_relocPINVOKE.IKeyframeRetriever_retrieve__SWIG_0(swigCPtr, Frame.getCPtr(frame), KeyframeList.getCPtr(keyframes));
    if (solar_api_relocPINVOKE.SWIGPendingException.Pending) throw solar_api_relocPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual FrameworkReturnCode retrieve(Frame frame, SWIGTYPE_p_std__setT_unsigned_int_t idxKfCandidates, KeyframeList keyframes) {
    FrameworkReturnCode ret = (FrameworkReturnCode)solar_api_relocPINVOKE.IKeyframeRetriever_retrieve__SWIG_1(swigCPtr, Frame.getCPtr(frame), SWIGTYPE_p_std__setT_unsigned_int_t.getCPtr(idxKfCandidates), KeyframeList.getCPtr(keyframes));
    if (solar_api_relocPINVOKE.SWIGPendingException.Pending) throw solar_api_relocPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual FrameworkReturnCode match(Frame frame, int index, DescriptorMatchVector matches) {
    FrameworkReturnCode ret = (FrameworkReturnCode)solar_api_relocPINVOKE.IKeyframeRetriever_match__SWIG_0(swigCPtr, Frame.getCPtr(frame), index, DescriptorMatchVector.getCPtr(matches));
    if (solar_api_relocPINVOKE.SWIGPendingException.Pending) throw solar_api_relocPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual FrameworkReturnCode match(IntVector indexDescriptors, DescriptorBuffer descriptors, int indexKeyframe, DescriptorMatchVector matches) {
    FrameworkReturnCode ret = (FrameworkReturnCode)solar_api_relocPINVOKE.IKeyframeRetriever_match__SWIG_1(swigCPtr, IntVector.getCPtr(indexDescriptors), DescriptorBuffer.getCPtr(descriptors), indexKeyframe, DescriptorMatchVector.getCPtr(matches));
    if (solar_api_relocPINVOKE.SWIGPendingException.Pending) throw solar_api_relocPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
